// Generated by CoffeeScript 1.6.3
(function() {
  var AddExpense, app, yamvc,
    __slice = [].slice;

  app = window.app || {};

  app.views = app.views || {};

  app.views.form = app.views.form || {};

  yamvc = window.yamvc;

  AddExpense = app.views.Form.extend(function() {
    var all;
    all = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    app.views.Form.apply(this, all);
    return this;
  });

  AddExpense.prototype.initConfig = function() {
    var all, config;
    all = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    config = this.get('config');
    config.models = {
      locale: new yamvc.Model({
        config: {
          namespace: 'locale'
        },
        data: {
          name: 'Name',
          date: 'Date',
          value: 'Value',
          exName: 'e.g Book',
          exDate: 'e.g 23/9/2013',
          exValue: 'e.g 25.50'
        }
      }),
      expense: new app.models.Expense({
        config: {
          namespace: 'expenses',
          proxy: new app.data.proxy.YdnDb({
            config: {
              db: app.data.db
            }
          })
        }
      })
    };
    app.views.Form.prototype.initConfig.apply(this, all);
    return this.bindModelEvents();
  };

  AddExpense.prototype.bindEvents = function() {
    var all;
    all = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    app.views.Form.prototype.bindEvents.apply(this, all);
    return this.addListener('render', this.addClass.bind(this));
  };

  AddExpense.prototype.bindModelEvents = function() {
    return this.getModel('expense').addListener('saved', this.afterModelSave.bind(this));
  };

  AddExpense.prototype.processForm = function(e) {
    var className, i, inputs, l, results, test;
    e.preventDefault();
    test = [];
    inputs = this.queryEls('form input');
    this.validateName();
    this.validateDate();
    this.validateValue();
    results = {};
    i = 0;
    l = inputs.length;
    while (i < l) {
      className = inputs[i].getAttribute('class') || "";
      if (className.search(/invalid/) > -1) {
        test.push(1);
      }
      results[inputs[i].name] = inputs[i].value;
      i++;
    }
    if (test.length === 0) {
      results['date'] = +new Date(app.logic.Date.parse(results['date']));
      this.getModel('expense').clear();
      this.getModel('expense').setData(results);
      app.mask.show();
      this.getModel('expense').save();
    }
    return this;
  };

  AddExpense.prototype.afterModelSave = function() {
    this.queryEl('form').reset();
    app.mask.hide();
    app.models.balance.load();
    app.models.chart.load();
    return this.hide();
  };

  AddExpense.prototype.addClass = function() {
    var form;
    form = this.queryEl('form');
    form.setAttribute('class', 'add-expenses');
    return form.setAttribute('data-type', 'add-expenses');
  };

  app.views.form.AddExpense = AddExpense;

  window.app = app;

}).call(this);

/*
//@ sourceMappingURL=AddExpense.map
*/

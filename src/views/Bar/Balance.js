// Generated by CoffeeScript 1.6.3
(function() {
  var Balance, app, yamvc,
    __slice = [].slice;

  app = window.app || {};

  app.views = app.views || {};

  yamvc = window.yamvc;

  Balance = yamvc.View.extend(function() {
    var all;
    all = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    yamvc.View.apply(this, all);
    return this;
  });

  Balance.prototype.init = function() {
    var all;
    all = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    yamvc.View.prototype.init.apply(this, all);
    this.bindEvents();
    return this;
  };

  Balance.prototype.bindEvents = function() {
    this.addListener('render', this.bindElements.bind(this));
    this.addListener('render', this.ajustBarsWidth.bind(this));
    this.getModel('balance').addListener('dataExpensesChange', this.updateBalance.bind(this));
    this.getModel('balance').addListener('dataResourcesChange', this.updateBalance.bind(this));
    this.getModel('balance').addListener('dataChange', this.updateBalance.bind(this));
    return this;
  };

  Balance.prototype.bindElements = function() {
    this.set('$resources', this.queryEl('.bar-balance-resources'));
    this.set('$expenses', this.queryEl('.bar-balance-expenses'));
    return this;
  };

  Balance.prototype.updateBalance = function() {
    this.recalculateModel();
    this.partialRender('.bar-balance-resources');
    this.partialRender('.bar-balance-expenses');
    this.partialRender('.bar-balance-current');
    this.ajustBarsWidth();
    return this;
  };

  Balance.prototype.ajustBarsWidth = function() {
    var expenses, expensesLeft, expensesWidth, resources, resourcesLeft, resourcesWidth;
    expenses = this.getModel('balance').$get('expenses');
    resources = this.getModel('balance').$get('resources');
    if (expenses === 0 && resources === 0) {
      expensesWidth = 0;
      resourcesWidth = 100;
      expensesLeft = 0;
      resourcesLeft = 0;
    } else if (expenses >= resources) {
      expensesWidth = 100;
      resourcesWidth = 0;
      expensesLeft = 0;
      resourcesLeft = 0;
    } else {
      expensesWidth = expenses === 0 ? 0 : parseInt(expenses / (resources / 100));
      resourcesWidth = 100 - expensesWidth;
      expensesLeft = 0;
      resourcesLeft = expensesWidth;
    }
    this.get('$resources').style.width = resourcesWidth + "%";
    this.get('$resources').style.left = resourcesLeft + "%";
    this.get('$expenses').style.width = expensesWidth + "%";
    this.get('$expenses').style.left = expensesLeft + "%";
    return this;
  };

  Balance.prototype.recalculateModel = function() {};

  app.views.BarBalance = Balance;

  window.app = app;

}).call(this);

/*
//@ sourceMappingURL=Balance.map
*/

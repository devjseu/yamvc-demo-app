// Generated by CoffeeScript 1.6.3
(function() {
  var Form, app, yamvc,
    __slice = [].slice;

  app = window.app || {};

  app.views = app.views || {};

  yamvc = window.yamvc;

  Form = yamvc.View.extend(function() {
    var all;
    all = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    yamvc.View.apply(this, all);
    this.bindEvents();
    return this;
  });

  Form.prototype.bindEvents = function() {
    this.addListener('render', this.resize.bind(this));
    this.addListener('render', this.bindClose.bind(this));
    return this.addListener('render', this.bindDOMEvents.bind(this));
  };

  Form.prototype.initConfig = function() {
    var all, config;
    all = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    config = this.get('config');
    config.width = config.width || 400;
    config.height = config.height || 300;
    config.views = config.views || {};
    config.views.close = new app.views.Button({
      config: {
        tpl: 'tpl-button',
        renderTo: '.top-bar',
        models: {
          locale: new yamvc.Model({
            config: {
              namespace: 'locale'
            },
            data: {
              text: 'X'
            }
          })
        }
      }
    });
    config = this.get('config');
    config.height = 200;
    config.views = config.views || {};
    config.views.add = new app.views.Button({
      config: {
        tpl: 'tpl-button',
        renderTo: '.bottom-bar',
        models: {
          locale: new yamvc.Model({
            config: {
              namespace: 'locale'
            },
            data: {
              text: 'Add'
            }
          })
        }
      }
    });
    return yamvc.View.prototype.initConfig.apply(this, all);
  };

  Form.prototype.bindClose = function() {
    var me;
    me = this;
    return this.queryEl('a').addEventListener('click', function(e) {
      e.preventDefault();
      me.hide();
      return this;
    }, true);
  };

  Form.prototype.bindDOMEvents = function() {
    this.queryEl('#form-name').addEventListener('keyup', this.validateName.bind(this));
    this.queryEl('#form-date').addEventListener('keyup', this.validateDate.bind(this));
    this.queryEl('#form-value').addEventListener('keyup', this.validateValue.bind(this));
    return this.queryEl('.bottom-bar a').addEventListener('click', this.processForm.bind(this), false);
  };

  Form.prototype.processForm = function() {};

  Form.prototype.validateName = function() {
    var value;
    value = this.queryEl('#form-name').value;
    if (value && value.length > 3) {
      return this.queryEl('#form-name').setAttribute('class', '');
    } else {
      return this.queryEl('#form-name').setAttribute('class', 'invalid');
    }
  };

  Form.prototype.validateDate = function() {
    var value;
    value = this.queryEl('#form-date').value;
    if (app.logic.Date.parse(value)) {
      return this.queryEl('#form-date').setAttribute('class', '');
    } else {
      return this.queryEl('#form-date').setAttribute('class', 'invalid');
    }
  };

  Form.prototype.validateValue = function() {
    var test, value;
    value = this.queryEl('#form-value').value;
    test = /^\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*$/;
    if (test.test(value)) {
      return this.queryEl('#form-value').setAttribute('class', '');
    } else {
      return this.queryEl('#form-value').setAttribute('class', 'invalid');
    }
  };

  Form.prototype.resize = function() {
    var style;
    style = this.queryEl('.window-vertical-center').style;
    style.width = this.getWidth() + 'px';
    return style.height = this.getHeight() + 'px';
  };

  Form.prototype.show = function() {
    var all, style;
    all = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    yamvc.View.prototype.show.apply(this, all);
    style = this.get('el').style;
    return style.display = 'table';
  };

  app.views.Form = Form;

  window.app = app;

}).call(this);

/*
//@ sourceMappingURL=Form.map
*/

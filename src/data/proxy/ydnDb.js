// Generated by CoffeeScript 1.6.3
(function() {
  var YdnDb, app, yamvc,
    __slice = [].slice;

  app = window.app || {};

  app.data = app.data || {};

  app.data.proxy = app.data.proxy || {};

  yamvc = window.yamvc;

  YdnDb = yamvc.Core.extend(function() {
    var all;
    all = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    yamvc.Core.apply(this, all);
    return this;
  });

  YdnDb.prototype.init = function() {
    var all, config, opts;
    all = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    opts = all[0] || {};
    config = opts.config || {};
    config.idProperty = 'id';
    this.set('initOpts', opts);
    this.set('config', config);
    this.initConfig();
    return this;
  };

  YdnDb.prototype.getStatus = function() {
    return this.get('status');
  };

  YdnDb.prototype.getResponse = function() {
    return this.get('response');
  };

  YdnDb.prototype.read = function(namespace, data, callback) {
    var $set, idProperty, req;
    idProperty = this.getIdProperty();
    if (typeof data[idProperty] === 'object') {
      console.log(idProperty);
    }
    $set = this.set.bind(this);
    req = this.getDb().getConnection().get(namespace, data[idProperty]);
    req.done(function(key) {
      $set('status', 'success');
      data[idProperty] = key;
      $set('response', data);
      return callback();
    });
    req.fail(function(e) {
      $set('status', 'error');
      $set('response', e);
      return callback();
    });
    return this;
  };

  YdnDb.prototype.create = function(namespace, data, callback) {
    var $set, idProperty, req;
    $set = this.set.bind(this);
    idProperty = this.getIdProperty();
    req = this.getDb().getConnection().put({
      name: namespace,
      keyPath: idProperty
    }, data);
    req.done(function(key) {
      $set('status', 'success');
      data[idProperty] = key;
      $set('response', data);
      return callback();
    });
    req.fail(function(e) {
      $set('status', 'error');
      $set('response', e);
      return callback();
    });
    return this;
  };

  YdnDb.prototype.update = function(namespace, data, callback) {
    var $set, req;
    $set = this.set.bind(this);
    req = this.getDb().getConnection().put(namespace, data);
    req.done(function() {
      $set('status', 'success');
      $set('response', data);
      return callback();
    });
    req.fail(function(e) {
      $set('status', 'error');
      $set('response', e);
      return callback();
    });
    return this;
  };

  YdnDb.prototype.destroy = function(namespace, data, callback) {
    var $set, idProperty, req;
    idProperty = this.getIdProperty();
    if (typeof data[idProperty] === 'object') {
      console.log(idProperty);
    }
    $set = this.set.bind(this);
    req = this.getDb().getConnection().remove(namespace, data[idProperty]);
    req.done(function() {
      $set('status', 'success');
      $set('response', {});
      return callback();
    });
    req.fail(function(e) {
      $set('status', 'error');
      $set('response', e);
      return callback();
    });
    return this;
  };

  app.data.proxy.YdnDb = YdnDb;

  window.app = app;

}).call(this);

/*
//@ sourceMappingURL=ydnDb.map
*/
